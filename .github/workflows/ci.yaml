name: ci

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  
  super-linter:
      name: Lint
      runs-on: ubuntu-latest

      permissions:
        contents: read
        packages: read
        statuses: write   

      steps:
        - name: Checkout code
          uses: actions/checkout@v5
          with:
            fetch-depth: 0
            persist-credentials: false

        - name: Run Super-Linter
          uses: super-linter/super-linter@v8.2.0
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            VALIDATE_ALL_CODEBASE: false   
            VALIDATE_TYPESCRIPT_ES: true   
            VALIDATE_HTML: true            
            OUTPUT_DETAILS: detailed       
            DEFAULT_BRANCH: main

  
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 22.18.0
      - run: npm ci

      - name: Run ESLint
        run: npx eslint . --ext .ts,.html

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Check coverage threshold
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          path: coverage/lcov.info
          min_coverage: 90

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  build:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 22.18.0
      - run: npm ci
      - run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: angular-build
          path: www/

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Build Docker image
        run: docker build -t my-angular-app .

      - name: Run container
        run: docker run -d -p 8080:80 --name angular-container my-angular-app

      - name: Wait for container to start
        run: sleep 5

      - name: Validate container is running
        run: |
          curl --fail --retry 5 --retry-delay 3 http://localhost:8080